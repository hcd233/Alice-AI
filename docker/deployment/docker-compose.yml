version: '3.8'

services:
  alice-ai-api:
    image: alice-ai:latest
    container_name: alice-ai-api
    privileged: true
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../../logs:/data/logs
    ports:
      - 8080:8080
    env_file:
      - ../../envs/deployment/api.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://alice-ai-api:8080/root/"]
      interval: 10s
      timeout: 5s
      retries: 2
    entrypoint: [
      "python", "alice_api.py",
    ]
    depends_on:
      alice-ai-mysql:
        condition: service_healthy

  alice-ai-webui:
    image: alice-ai:latest
    container_name: alice-ai-webui
    privileged: true
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8501:8501
    env_file:
      - ../../envs/deployment/webui.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://alice-ai-webui:8501"]
      interval: 10s
      timeout: 5s
      retries: 2
    entrypoint: [
      "streamlit", "run", 
      "alice_webui.py",
    ]

  alice-ai-mysql:
    image: mysql:latest
    container_name: alice-ai-mysql
    privileged: true
    volumes:
      - mysql-data:/var/lib/alice-mysql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h alice-ai-mysql -P 3306 -u$$MYSQL_USER -p$$MYSQL_PASSWORD" ]
      interval: 5s
      retries: 10
    env_file:
      - ../../envs/deployment/mysql.env

  debug-alice-ai-redis:
    image: bitnami/redis:latest
    container_name: debug-alice-ai-redis
    privileged: true
    volumes:
      - redis-data:/data
      - ../../confs/deployment/redis.conf:/opt/bitnami/redis/mounted-etc/redis.conf
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep PONG" ]
      interval: 5s
      retries: 10
    env_file:
      - ../../envs/deployment/redis.env

volumes:
  mysql-data:
    name: mysql-data
    external: true
  redis-data:
    name: redis-data
    external: true

# docker-compose -f docker/deployment/docker-compose.yml up -d --no-build